#!/bin/bash

# Clear Case Script - Reset case completely to step 1
# Usage: ./clear_case.sh <case_name>
# Version: 1.9.2 - Enhanced for browser service integration

set -e

if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <case_name>"
    echo "Example: $0 youssef"
    echo ""
    echo "This script completely resets a case to step 1 by removing:"
    echo "- All generated files (JSON, HTML) from outputs/tests/<case_name>"
    echo "- All browser service PDFs from outputs/browser"
    echo "- All case-specific PDFs from test-data/sync-test-cases/<case_name>"
    echo "- All lawyer selections"
    echo "- All processing history"
    exit 1
fi

CASE_NAME="$1"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TM_ROOT="$(dirname "$SCRIPT_DIR")"
OUTPUTS_DIR="$TM_ROOT/outputs/tests"
CASE_OUTPUT_DIR="$OUTPUTS_DIR/$CASE_NAME"

echo "Clearing case completely: $CASE_NAME"

# Clear main case output directory
if [[ -d "$CASE_OUTPUT_DIR" ]]; then
    echo "Removing all generated files from: $CASE_OUTPUT_DIR"
    rm -rf "$CASE_OUTPUT_DIR"
    echo "‚úÖ Case output directory cleared"
else
    echo "‚ÑπÔ∏è  No case output directory found for '$CASE_NAME'"
fi

# Clear browser service PDF outputs
BROWSER_OUTPUT_DIR="$TM_ROOT/outputs/browser"
if [[ -d "$BROWSER_OUTPUT_DIR" ]]; then
    # Remove any PDFs that contain the case name
    BROWSER_PDFS=$(find "$BROWSER_OUTPUT_DIR" -name "*${CASE_NAME}*" -type f 2>/dev/null || true)
    if [[ -n "$BROWSER_PDFS" ]]; then
        echo "Removing browser service PDFs:"
        echo "$BROWSER_PDFS" | while read -r file; do
            if [[ -f "$file" ]]; then
                rm "$file"
                echo "  Removed: $(basename "$file")"
            fi
        done
    fi
fi

# Clear case-specific PDFs from sync test cases directory (generated by monkey --with-pdf)
SYNC_TEST_CASES_DIR="$TM_ROOT/test-data/sync-test-cases/$CASE_NAME"
if [[ -d "$SYNC_TEST_CASES_DIR" ]]; then
    # Remove generated PDFs with case_id pattern: <case_id>_complaint.pdf
    CASE_PDF_PATTERN="${CASE_NAME}_complaint.pdf"
    CASE_PDF_PATH="$SYNC_TEST_CASES_DIR/$CASE_PDF_PATTERN"
    if [[ -f "$CASE_PDF_PATH" ]]; then
        rm "$CASE_PDF_PATH"
        echo "  Removed case-specific PDF: $CASE_PDF_PATTERN"
    fi
    
    # Also check for lowercase version
    CASE_PDF_PATTERN_LOWER="$(echo "$CASE_NAME" | tr '[:upper:]' '[:lower:]')_complaint.pdf"
    CASE_PDF_PATH_LOWER="$SYNC_TEST_CASES_DIR/$CASE_PDF_PATTERN_LOWER"
    if [[ -f "$CASE_PDF_PATH_LOWER" ]]; then
        rm "$CASE_PDF_PATH_LOWER"
        echo "  Removed case-specific PDF: $CASE_PDF_PATTERN_LOWER"
    fi
fi

# Also remove any standalone JSON files that might exist in the test outputs
# Handle both lowercase and uppercase variants
STANDALONE_JSON=$(find "$OUTPUTS_DIR" -maxdepth 1 -iname "*${CASE_NAME}*.json" 2>/dev/null || true)
if [[ -n "$STANDALONE_JSON" ]]; then
    echo "Removing standalone JSON files:"
    echo "$STANDALONE_JSON" | while read -r file; do
        if [[ -f "$file" ]]; then
            rm "$file"
            echo "  Removed: $(basename "$file")"
        fi
    done
fi

echo ""
echo "üìù Case '$CASE_NAME' has been completely reset to step 1 (NEW status)"
echo "   - All generated files removed from outputs/tests/$CASE_NAME"
echo "   - All browser service PDFs cleared from outputs/browser"
echo "   - All case-specific PDFs removed from test-data/sync-test-cases/$CASE_NAME"
echo "   - All lawyer selections cleared"
echo "   - All processing history removed"
echo ""
echo "The file watcher will automatically detect the changes."
echo "The case will appear as NEW status in the dashboard."